version: '3.8'

services:
  delivery:
    build:
      context: .
      dockerfile: delivery/.Dockerfile
    ports:
      - "8002:8002"
    networks:
      - cookies_network
    environment:
      - SECRET_KEY="django-insecure-vbi)w@#u7-hbl@6y$kcm$1+swy0a_=sy+$u8w*ct&46nr+uanz"
      - DEBUG=true
      - ALLOWED_HOSTS=*

      - CLIENT_SERVICE=http://customer-back:8001
      - DELIVERY_SERVICE=http://delivery:8002
      - REPAIR_SERVICE=http://repair:8003

      - KEYCLOAK_SERVER_URL=https://keycloak:8443/
      - KEYCLOAK_REALM=cookies_realm
      - KEYCLOAK_CLIENT_ID=cookies_client
      - KEYCLOAK_SERVISE_ACCOUNT_ID=02dd76abf17d4550bfa8fab01e0800d3
      - EYCLOAK_SERVISE_ACCOUNT_NAME=service-account-cookies_client
      - KEYCLOAK_CLIENT_SECRET_KEY=WbpxXAXFuAXLGgUlQIofXZhJJP6boOPO
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8002"]

  repair:
    build:
      context: .
      dockerfile: repair/.Dockerfile
    ports:
      - "8003:8003"
    networks:
      - cookies_network
    environment:
      - SECRET_KEY="django-insecure-vbi)w@#u7-hbl@6y$kcm$1+swy0a_=sy+$u8w*ct&46nr+uanz"
      - DEBUG=true
      - ALLOWED_HOSTS=*

      - CLIENT_SERVICE=http://customer-back:8001
      - DELIVERY_SERVICE=http://delivery:8002
      - REPAIR_SERVICE=http://repair:8003

      - KEYCLOAK_SERVER_URL=https://keycloak:8443/
      - KEYCLOAK_REALM=cookies_realm
      - KEYCLOAK_CLIENT_ID=cookies_client
      - KEYCLOAK_SERVISE_ACCOUNT_ID=02dd76abf17d4550bfa8fab01e0800d3
      - EYCLOAK_SERVISE_ACCOUNT_NAME=service-account-cookies_client
      - KEYCLOAK_CLIENT_SECRET_KEY=WbpxXAXFuAXLGgUlQIofXZhJJP6boOPO
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8003"]

  customer-back:
    build:
      context: .
      dockerfile: customer_back/.Dockerfile
    ports:
      - "8001:8001"
    networks:
      - cookies_network
    environment:
      - SECRET_KEY="django-insecure-vbi)w@#u7-hbl@6y$kcm$1+swy0a_=sy+$u8w*ct&46nr+uanz"
      - DEBUG=true
      - ALLOWED_HOSTS=*

      - CSRF_TRUSTED_ORIGINS=http://188.225.43.230:3000
      - CORS_ALLOWED_ORIGINS=http://188.225.43.230:3000


      - CLIENT_SERVICE=http://customer-back:8001
      - DELIVERY_SERVICE=http://delivery:8002
      - REPAIR_SERVICE=http://repair:8003

      - REDIS_HOST=websocket-layer
      - REDIS_PORT=6379

      - KEYCLOAK_SERVER_URL=https://keycloak:8443/
      - KEYCLOAK_REALM=cookies_realm
      - KEYCLOAK_CLIENT_ID=cookies_client
      - KEYCLOAK_SERVISE_ACCOUNT_ID=02dd76abf17d4550bfa8fab01e0800d3
      - KEYCLOAK_SERVISE_ACCOUNT_NAME=service-account-cookies_client
      - KEYCLOAK_CLIENT_SECRET_KEY=WbpxXAXFuAXLGgUlQIofXZhJJP6boOPO

    command: ["python3", "manage.py", "runserver", "0.0.0.0:8001"]

  customer-front:
    build:
      context: .
      dockerfile: customer_front/.Dockerfile
    ports:
      - "3000:3000"
    networks:
      - cookies_network
    command: ["npm", "start"]
    environment:
      REACT_APP_API_BACK: http://188.225.43.230:8001/

  websocket-layer:
    image: redis:latest
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - cookies_network

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      keycloak-db:
        condition: service_healthy
    environment:
      KEYCLOAK_ADMIN_PASSWORD: admin
      KEYCLOAK_ADMIN: admin
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/server.crt.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/server.key.pem

      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_FEATURES: preview


      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/postgres
      
    networks:
      - cookies_network
    volumes:
      - ./tls:/opt/keycloak/conf
    command: ["start"]

  keycloak-db:
    image: "postgres:latest"
    restart: unless-stopped
    ports:
      - "5100:5432"
    volumes:
        - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak
      PGUSER: postgres
    networks:
      - cookies_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  cookies_network:
